// The Grid
.row {
  margin:     0 auto;
  max-width:  100%;
  min-width:  $screenSmall;
  width:      $rowWidth;
  
  .row {
    margin:     0 ( -( $columnGutter / 2 ) );
    max-width:  none;
    min-width:  0;
    width:      auto;
  }

  &.collapse {
    .column, .columns {
      padding:  0;
    }
  }

  .row {
    margin:     0 ( -( $columnGutter / 2 ) );
    max-width:  none;
    min-width:  0;
    width:      auto;

    &.collapse {
      margin:   0;
    }
  }
}

.column, .columns {
  float:      left;
  min-height: 1px;
  padding:    0 ( $columnGutter / 2 );
  position:   relative;
  
  &.centered {
    float:    none;
    margin:   0 auto;
  }
}

[class*="column"] + [class*="column"]:last-child {
  float: right;
}

[class*="column"] + [class*="column"].end {
  float: left;
}

// Create column classes
@for $i from 1 through $totalColumns {
  .#{ convert-number-to-word($i) } {
    width: gridCalc($i, $totalColumns);
  }
}

// Creating .row-# classes
@for $i from 1 through $totalColumns {
  .row {
    .#{ convert-number-to-word($i) } {
      @extend .#{ convert-number-to-word($i) };
    }
  }
}

// Creating .row .offset-by-# classes
@for $i from 1 through $totalColumns - 2 {
  .row {
    .offset-by-#{ convert-number-to-word($i) } {
      margin-left: gridCalc($i, $totalColumns);
    }
  }
}

// Creating .row .push-# classes
@for $i from 2 through $totalColumns - 2 {
  .push-#{ convert-number-to-word($i) } {
    left: gridCalc($i, $totalColumns);
  }

  .pull-#{ convert-number-to-word($i) } {
    right: gridCalc($i, $totalColumns);
  }
}

img, object, embed {
  height: auto;
  max-width: 100%;
}

object, embed {
  height: 100%;
}

img {
  -ms-interpolation-mode: bicubic;
}

#map_canvas img, .map_canvas img {
  max-width: none!important;
}

.row {
  @include clearfix();
}

// Mobile Grid and Overrides
@media only screen and (max-width: $screenSmall - 1) {
  body {
    margin-left:              0;
    margin-right:             0;
    min-width:                0;
    padding-left:             0;
    padding-right:            0;
    width:                    100%;
    -ms-text-size-adjust:     none;
    -webkit-text-size-adjust: none;
  }

  .row {
    margin-left:  0;
    margin-right: 0;
    min-width:    0;
    width:        auto;
  }
  
  .column, .columns {
    float: none;
    width: auto !important;
  }
  
  .column:last-child, .columns:last-child {
    float: none;
  }
  
  [class*="column"] + [class*="column"]:last-child {
    float: none;
  }
  
  .column:before, .columns:before, .column:after, .columns:after {
    content: "";
    display: table;
  }
  
  .column:after, .columns:after {
    clear: both;
  }

  // Placeholder classes for mobile grid overrides
  %no-left-margin {
    margin-left: 0 !important;
  }
  
  %left-auto {
    left: auto;
  }
  
  %right-auto {
    right: auto;
  }

  @for $i from 1 through $totalColumns - 2 {
    .offset-by-#{ convert-number-to-word($i) } {
      @extend %no-left-margin;
    }
  }

  @for $i from 2 through $totalColumns - 2 {
    .push-#{ convert-number-to-word($i) } {
      @extend %left-auto;
    }
    
    .pull-#{ convert-number-to-word($i) } {
      @extend %right-auto;
    }
  }

  /* Mobile 4-column Grid */
  @for $i from 1 through $mobileTotalColumns {
    .row {
      .mobile-#{convert-number-to-word($i)} {
        float:    left;
        padding:  0 ( $columnGutter / 2 );
        width:    gridCalc($i, $mobileTotalColumns) !important;

        &:last-child {
          float:  right;
        }
      }
      &.collapse {
        .mobile-#{ convert-number-to-word($i) } {
          padding:  0;
        }
      }
    }
  }

  @for $i from 1 through $mobileTotalColumns - 1 {
    .push-#{ convert-number-to-word($i) }-mobile {
      left:   gridCalc($i, $mobileTotalColumns);
    }
    
    .pull-#{ convert-number-to-word($i) }-mobile {
      right:  gridCalc($i, $mobileTotalColumns);
    }
  }
}

// Block Grids
.block-grid {
  display:  block;
  overflow: hidden;
  padding:  0;

  &>li {
    display:  block;
    float:    left;
    height:   auto;
  }
  
  &.one-up {
    margin:   0; 
    
    &>li {
      padding:  0 0 15px;
      width:    100%;
    }
  }

  &.two-up {
    margin:   0 -15px; 
    
    &>li {
      padding:  0 15px 15px; 
      width:    50%;
      
      &:nth-child(2n+1) {
        clear:  both;
      }
    }
  }

  &.three-up {
    margin:   0 -12px; 
    
    &>li {
      padding:  0 12px 12px; 
      width:    33.33%;
      
      &:nth-child(3n+1) {
        clear:  both;
      }
    }
  }

  &.four-up {
    margin:   0 -10px; 
    
    &>li {
      padding:  0 10px 10px; 
      width:    25%;
      
      &:nth-child(4n+1) {
        clear:  both;
      }
    }
  }

  &.five-up {
    margin:   0 -8px; 
    
    &>li {
      padding: 0 8px 8px; 
      width: 20%;
      
      &:nth-child(5n+1) {
        clear: both;
      }
    }
  }
}

// Mobile Block Grids
@media only screen and (max-width: $screenSmall - 1) {
  .block-grid.mobile {
    &>li {
      float:        none;
      margin-left:  0;
      width:        100%;
    }
  }

  .block-grid {
    &>li {
      clear: none !important;
    }
    
    &.mobile-two-up>li {
      width: 50%; 
      
      &:nth-child(2n+1) {
        clear: both;
      }
    }

    &.mobile-three-up>li {
      width: 33.33%; 

      &:nth-child(3n+1) {
        clear: both !important;
      }
    }

    &.mobile-four-up>li {
      width: 25%;
      
      &:nth-child(4n+1) {
        clear: both;
      }
    }

    &.mobile-five-up>li {
      &:nth-child(5n+1) {
        clear: both;
      }
    }
  }
}

